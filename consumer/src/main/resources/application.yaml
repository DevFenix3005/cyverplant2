spring:
  application.name: Producer
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    properties:
      basic.auth:
        credentials.source: USER_INFO
        user.info: ${SR_KEY}:${SR_SECRET}
      schema.registry.url: ${SCHEMA_REGISTRY_URL}
      security.protocol: SASL_SSL
      sasl:
        mechanism: PLAIN
        jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username='${ACC_SERVICE_USERNAME}' password='${ACC_SERVICE_PASSWORD}';
      session.timeout.ms: 45000
    consumer:
      group-id: ${KAFKA_GROUP_ID}
      topic: ${KAFKA_TOPIC}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        specific.avro:
          reader: true
          value.type: com.cyver.plant.commons.avro.EnvironmentalMeasurementAvro

  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USER}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate.ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect



client.id: "ccloud-springboot-client-a7fad8aa-c867-44b1-9ab0-491c708d4db7"
